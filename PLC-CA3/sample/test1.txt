# -- def: (functions) --
function randomFunc(int b, int c, boolean d): boolean {
    int a;
    IsRand(a);
    ( ( b * c / d >= e == f ) && ![?IsRand(a)] ) => (boolean flag = false; print(a); return true;)
    return false;
}

function b(): int {
    IsLocal(b);
    boolean[5] local_array = [-1, true, 666, -10, 0, 10.06];
    for (i : local_array)
    {
        int a;
        (randomFunc() + a == c % (d + 54) && true) => (return; a = a + 5;)
        print([?IsLocal(a)]);
        int c = local_array[a * 23 + 2] + 5;
        boolean[1] aa;
        int[4] local_array;
        for(i : local_array)
        {
            int a_new = false;
            a_new = i;
            for(p : local_array)
            {
                (randomFunc() == true) => (a_new = true;)
                t = 10;
                (a_new == aa[1]) =>(int t; boolean j = t; (t == true && j*4 >= 2) => (int jj = 2;) a_new = jj;)
                a_new = j;
                t = 20;
            }
            a_new = t * j;
            a_new = 10;
        }
        a_new = 5;
        a_new = true;
    }
}
main{ # main body =>
    int num_1;
    float num_2 = -0.012;
    boolean flag = (5 == 6);
    int[2] aA_2;
    num2 = num1 * 5 + (+6) - 10.00 / a[2];
    Predicate1(flag);
    (true) => ( print(num_1); (flag >= 5 * num2 % aA_2[num_1]) => (num_2 = num1;) )
    int[4] a2 = [2, 4, 6, 8];
    int num = a2[1] +a2[4];
    (true || false && 8 >= -2 || 5 == num1 + 3) => (a = 5; IsPredicate(b);)

    for (i : aA_2)
    {
        (a == b && isDoubled(a)) => (flag = true; print(flag);)
        print([?IsPredicate(a2[5])]);
    }
    EventNum(i);
    boolean flag = isPossible(a);
    print([EventNum(?)]);
}
